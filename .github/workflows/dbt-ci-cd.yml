name: dbt CI with State Comparison and sqlfmt

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from PR branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dbt and sqlfmt
        run: |
          pip install dbt-core dbt-bigquery  # Ajusta seg√∫n tu adaptador dbt
          pip install 'shandy-sqlfmt[jinjafmt]'

      - name: Set up dbt profiles
        run: |
          mkdir -p ~/.dbt
          cp dbt_medallion/.dbt/profiles.yml ~/.dbt/profiles.yml

      # Cambiar a la rama main para obtener el estado actual
      - name: Checkout main branch code for state
        if: github.ref != 'refs/heads/main'
        uses: actions/checkout@v2
        with:
          ref: main
          path: main_branch_code
          fetch-depth: 0

      # Verificar la existencia de la rama main
      - name: List branches for debugging
        run: git branch -a

      # Generar manifest.json para la rama main
      - name: Generate manifest.json for main branch
        if: github.ref != 'refs/heads/main'
        run: |
          cd $GITHUB_WORKSPACE/main_branch_code/dbt_medallion
          dbt compile --target-path=$GITHUB_WORKSPACE/main-run-artifacts
          
      # Ejecutar modelos modificados
      - name: Run modified dbt models
        run: |
          cd $GITHUB_WORKSPACE/dbt_medallion
          dbt run --project-dir . --profiles-dir ~/.dbt --select state:modified+ --defer --state $GITHUB_WORKSPACE/main-run-artifacts

      # Ejecutar tests modificados en la rama de PR
      - name: Run modified dbt tests
        run: |
          cd $GITHUB_WORKSPACE/dbt_medallion
          dbt test --project-dir . --profiles-dir ~/.dbt --select state:modified+ --state $GITHUB_WORKSPACE/main-run-artifacts

      # Formatear archivos SQL con sqlfmt
      - name: Format SQL files with sqlfmt
        run: |
          find dbt_medallion/models -name "*.sql" | xargs sqlfmt -i

      # Notificar en caso de fallo
      - name: Notify on failure
        if: failure()
        run: |
          echo "Formatting or testing failed. Please check the logs and fix issues."